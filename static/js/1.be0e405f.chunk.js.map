{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","games/TicTacToe.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Square","onClick","className","calculateWinner","squares","possibleLines","a","b","c","TicTacToe","props","useState","fill","setSquares","winner","userSymbol","computerSymbol","renderSquare","nextSquares","slice","setTimeout","generatedSquares","generatedSquare","setGeneratedSquare","isBoardFull","avatar"],"mappings":"2HAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,4EIGA,SAASC,EAAT,GAAqC,IAAnBJ,EAAkB,EAAlBA,MAAOK,EAAW,EAAXA,QACvB,OACE,4BAAQC,UAAU,SAASD,QAASA,GACjCL,GA6EP,SAASO,EAAgBC,GAYvB,IAXA,IAAMC,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGA5B,EAAI,EAAGA,EAAI4B,EAAcR,OAAQpB,IAAK,CAAC,IAAD,cAC3B4B,EAAc5B,GADa,GACtC6B,EADsC,KACnCC,EADmC,KAChCC,EADgC,KAE7C,GAAIJ,EAAQE,IAAMF,EAAQE,KAAOF,EAAQG,IAAMH,EAAQE,KAAOF,EAAQI,GACpE,OAAOJ,EAAQE,GAGnB,OAAO,KAYMG,UAtGf,SAAmBC,GAAQ,IAAD,EACMC,mBAASjC,MAAM,GAAGkC,KAAK,OAD7B,mBACjBR,EADiB,KACRS,EADQ,KAElBC,EAASX,EAAgBC,GACzBW,EAAa,IACbC,EAAiB,IAYvB,SAASC,EAAaxC,GACpB,OACE,kBAACuB,EAAD,CACEJ,MAAOQ,EAAQ3B,GACfwB,QAAS,WACP,GAAkB,MAAdG,EAAQ3B,IAAwB,MAAVqC,EAA1B,CAGA,IAAMI,EAAcd,EAAQe,QAC5BD,EAAYzC,GAAKsC,EACjBF,EAAWK,GAENf,EAAgBe,IACnBE,YAAW,WACT,IAAMC,EAAmBH,EAAYC,QAC/BG,EAgCpB,SAA4BlB,GAC1B,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAAQP,OAAQpB,IAClC,GAAkB,MAAd2B,EAAQ3B,GACV,OAAOA,EAGX,OAAO,KAtC6B8C,CAAmBF,GACpB,MAAnBC,IACFD,EAAiBC,GAAmBN,EACpCH,EAAWQ,MAEZ,SAOb,OACE,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,aACb,2BAvCAY,EACgB,MAAXA,EAAiB,oBAAsB,2BAqFpD,SAAqBV,GACnB,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAAQP,OAAQpB,IAClC,GAAkB,MAAd2B,EAAQ3B,GACV,OAAO,EAGX,OAAO,EA1FM+C,CAAYpB,GACd,2BAED,sGAAN,OAA0GM,EAAMe,OAAhH,sHAoCA,yBAAKvB,UAAU,cACZe,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,GACbA,EAAa,O","file":"static/js/1.be0e405f.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport \"./TicTacToe.css\";\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className='square' onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction TicTacToe(props) {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const winner = calculateWinner(squares);\n  const userSymbol = \"X\";\n  const computerSymbol = \"O\";\n\n  function getStatus() {\n    if (winner) {\n      return winner === \"X\" ? \"Du hast gewonnen!\" : \"Es ist ja nur ein Spiel!\";\n    } else if (isBoardFull(squares)) {\n      return \"Ein solidarisches Remis!\";\n    } else {\n      return `Um zu spielen, setze dein Kreuz in eines der KÃ¤stchen, indem du dort hinein klickst. Danach ist ${props.avatar} dran. Um zu gewinnen, musst du drei Kreuze in einer waagerechten, senkrechten oder diagonalen Reihe platzieren.`;\n    }\n  }\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (squares[i] != null || winner != null) {\n            return;\n          }\n          const nextSquares = squares.slice();\n          nextSquares[i] = userSymbol;\n          setSquares(nextSquares);\n\n          if (!calculateWinner(nextSquares)) {\n            setTimeout(() => {\n              const generatedSquares = nextSquares.slice();\n              const generatedSquare = setGeneratedSquare(generatedSquares);\n              if (generatedSquare != null) {\n                generatedSquares[generatedSquare] = computerSymbol;\n                setSquares(generatedSquares);\n              }\n            }, 300);\n          }\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className='game'>\n      <div className='game-info'>\n        <p>{getStatus()}</p>\n      </div>\n      <div className='game-board'>\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction setGeneratedSquare(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] == null) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction calculateWinner(squares) {\n  const possibleLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  // go over all possibly winning lines and check if they consist of only X's/only O's\n  for (let i = 0; i < possibleLines.length; i++) {\n    const [a, b, c] = possibleLines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction isBoardFull(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] == null) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default TicTacToe;\n"],"sourceRoot":""}
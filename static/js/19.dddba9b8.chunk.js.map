{"version":3,"sources":["games/Memory.js"],"names":["Memory","props","state","items","duplicatedItems","randomizedItems","finalizedItems","openedItems","start","name","index","this","length","setTimeout","checkItems","item","close","push","setState","isDifferentItem","isPair","startsWith","isSamePair","complete","alternateItems","map","concat","shuffleItems","fail","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","className","Card","key","click","handleClick","Component","onClick","clicked","source","React"],"mappings":"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","file":"static/js/19.dddba9b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Memory.scss\";\nimport FadingImage from \"../helper/FadingImage\";\n\nclass Memory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: ['geschirrspülerei','heimfahrt','ordnung','schlaf','schwimmen','seekamp','zeltaufbau','zeltgemeinschaft'],\n      duplicatedItems: [],\n      randomizedItems: [],\n      finalizedItems: [],\n      openedItems: []\n    }\n    this.start()\n  }\n\n  handleClick(name,index){\n    if (this.state.openedItems.length === 2) {\n      setTimeout(() => { this.checkItems() },1000)\n    } else {\n      let item = { name, index }\n      let finalizedItems = this.state.finalizedItems\n      let items = this.state.openedItems\n      finalizedItems[index].close = false\n      items.push(item)\n      this.setState({ openedItems: items, finalizedItems: finalizedItems })\n      if (this.state.openedItems.length === 2) {\n        setTimeout(() => { this.checkItems() },1000)\n      }\n    }\n  }\n\n  isSamePair() {\n    const isDifferentItem = this.state.openedItems[0].index !== this.state.openedItems[1].index;\n    const isPair = this.state.openedItems[0].name.startsWith(this.state.openedItems[1].name) ||\n      this.state.openedItems[1].name.startsWith(this.state.openedItems[0].name)\n    return isDifferentItem && isPair ? true : false;\n  }\n\n  checkItems(){\n    let finalizedItems = this.state.finalizedItems\n    if(this.isSamePair()) {\n      finalizedItems[this.state.openedItems[0].index].complete = true\n      finalizedItems[this.state.openedItems[1].index].complete = true\n    } else {\n      finalizedItems[this.state.openedItems[0].index].close = true\n      finalizedItems[this.state.openedItems[1].index].close = true\n    }\n    this.setState({ finalizedItems, openedItems: [] })\n  }\n\n  start(){\n    let finalizedItems = [];\n    const alternateItems = this.state.items.map((item) => item.concat(\"2\"));\n    this.state.duplicatedItems = this.state.items.concat(alternateItems)\n    this.state.randomizedItems = this.shuffleItems(this.state.duplicatedItems)\n    this.state.randomizedItems.map((name,index) => {\n      finalizedItems.push({\n        name,\n        close: true,\n        complete: false,\n        fail: false\n      })\n    })\n    this.state.finalizedItems = finalizedItems\n  }\n\n  shuffleItems(array){\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array\n  }\n\n  render(){\n    return (\n      <div className=\"memory\">\n        <p className=\"description\">In diesem Aufdeck-Spiel geht es darum, gleiche Paare zu finden. Diese bestehen aus einer Zeichnung und dem dazu passenden Foto. Klicke einfach auf die Kärtchen, um zu sehen, was sich auf der Rückseite befindet. Zusammenpassende Paare bleiben aufgedeckt liegen.</p>\n        <div className=\"cards\">\n          {this.state.finalizedItems.map((item, index) => {\n              return <Card key={index} item={item.name} click={() => {this.handleClick(item.name,index)}} close={item.close} complete={item.complete}/>\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Card extends React.Component {\n  clicked(item){\n    this.props.click(item)\n  }\n\n  render(){\n    return (\n      <div className={\"card\" + (!this.props.close ? ' opened' : '') + (this.props.complete ? ' matched' : '')} \n        onClick={() => this.clicked(this.props.item)}>\n        {!this.props.close || this.props.complete ? \n        <div className=\"back\"><FadingImage source={this.props.item} /></div> : \n        <div className=\"front\"><FadingImage source='logo' /></div>}\n      </div>\n    )\n  }\n}\n\nexport default Memory;"],"sourceRoot":""}
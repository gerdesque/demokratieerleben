{"version":3,"sources":["helper/FadeInSection.js","assets/sounds/birds.mp3","helper/Nav.js","effects/Birds.js","routes/Intro.js","App.js","serviceWorker.js","index.js"],"names":["FadeInSection","props","React","useState","isVisible","setVisible","domRef","useRef","useEffect","IntersectionObserver","entries","forEach","entry","isIntersecting","onOutOfView","observe","current","className","direction","ref","children","module","exports","Nav","map","item","index","key","exact","to","Birds","SmokingPit","lazy","IntroDecission","Intro","setBirdsRef","element","birds","stopAudio","value","pause","play","render","id","hidden","loop","src","require","type","Component","ChapterOne","ChapterTwo","App","basename","fallback","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b30a157b.chunk.js","sourcesContent":["import React from 'react';\nimport './FadeInSection.css';\n\nfunction FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef(); \n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        setVisible(entry.isIntersecting)\n        if (props.onOutOfView) {\n          props.onOutOfView(!entry.isIntersecting);\n        }\n      });\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return (\n    <div\n      className={`fade-in-${props.direction} ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default FadeInSection;","module.exports = __webpack_public_path__ + \"static/media/birds.d1de7809.mp3\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport './Nav.css';\n\nfunction Nav() {\n\n  const items = ['/', '/chapterone', '/chaptertwo'];\n    \n  return (\n    <nav>\n      <ul>\n        {items.map((item, index) =>\n            <li key={index}>\n              <NavLink exact to={item}>{item}</NavLink>\n            </li>\n          )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport './Birds.css';\n\nfunction Birds() {\n  return (\n    <>\n      <div className=\"bird-container bird-container--one\">\n        <div className=\"bird bird--one\"></div>\n      </div>\n      \n      <div className=\"bird-container bird-container--two\">\n        <div className=\"bird bird--two\"></div>\n      </div>\n      \n      <div className=\"bird-container bird-container--three\">\n        <div className=\"bird bird--three\"></div>\n      </div>\n      \n      <div className=\"bird-container bird-container--four\">\n        <div className=\"bird bird--four\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Birds;\n","import React, { Component, lazy } from 'react';\nimport './Intro.css';\nimport Birds from '../effects/Birds';\nimport FadeInSection from '../helper/FadeInSection';\nconst SmokingPit = lazy(() => import('../effects/SmokingPit'));\nconst IntroDecission = lazy(() => import('./IntroDecission'));\n\nclass Intro extends Component {\n\nsetBirdsRef = element => {\n    this.birds = element;\n  };\n\nstopAudio = (value) => {\n  value ? this.birds.pause() : this.birds.play();\n}\n\nrender = () => {\n  return (\n      <div className=\"parallax\">\n        <div id=\"header\" className=\"parallax__group\">\n          <div className=\"parallax__layer parallax__layer--base\">\n            <div className=\"title\">\n              <h1>Demokratie <i>er</i>leben</h1>\n              <FadeInSection direction=\"title\" onOutOfView={(value) => this.stopAudio(value)}>\n                <Birds/>\n                <audio ref={this.setBirdsRef} hidden loop>\n                  <source src={require('../assets/sounds/birds.mp3')} type=\"audio/mpeg\"/>\n                  Your browser does not support the audio element.\n                </audio>\n              </FadeInSection>\n            </div>\n          </div>\n        </div>\n        <div id=\"group2\" className=\"parallax__group\">\n          <div className=\"parallax__layer parallax__layer--base\">\n            <div className=\"box\"><p>Es ist 1927. Irgendwo im Ruhrgebiet leben zwei Kinder: Anna und Karl. Die Eltern der Beiden gehören zur großen Arbeiterschaft, die im Bergbau, in Webereien, Fabriken und Stahlwerken arbeiten.</p></div>\n          </div>\n          <div className=\"parallax__layer parallax__layer--deep\"></div>\n        </div>\n        <div id=\"group3\" className=\"parallax__group\">\n          <div className=\"parallax__layer parallax__layer--base\">\n            <SmokingPit />\n          </div>\n          <div className=\"parallax__layer parallax__layer--back\">\n            \n          </div>\n        </div>\n        <div id=\"group4\" className=\"parallax__group\">\n          <div className=\"parallax__layer parallax__layer--fore\">\n            <IntroDecission/>\n          </div>\n        </div>\n      </div>\n  );\n}\n}\n\nexport default Intro;\n","import React, { Suspense, lazy } from 'react';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport './App.css';\nimport Nav from './helper/Nav';\nimport Intro from './routes/Intro';\nconst ChapterOne = lazy(() => import('./routes/ChapterOne'));\nconst ChapterTwo = lazy(() => import('./routes/ChapterTwo'));\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/demokratieerleben\">\n      <div className=\"App\">\n        <Nav />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route exact path=\"/\" component={Intro}/>\n            <Route path=\"/chapterone\" component={ChapterOne}/>\n            <Route path=\"/chaptertwo\" component={ChapterTwo}/>\n          </Switch>\n        </Suspense>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}